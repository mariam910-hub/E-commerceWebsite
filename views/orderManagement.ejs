<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - User Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style_admin.css">
</head>
<body>

    <!-- Navbar -->
        <!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="#">Admin Panel</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav ms-auto">
        <li class="nav-item"><a class="nav-link" href="#">Account</a></li>
        <li class="nav-item"><a class="nav-link logout-btn" href="#">Logout</a></li>
      </ul>
    </div>
</nav>

<!-- Sidebar + Main Content -->
<div class="d-flex">
    <nav class="bg-dark text-white p-3" id="sidebar">
      <ul class="nav flex-column">
        <li class="nav-item"><a class="nav-link text-white" href="/admin/dashboard/sales">Dashboard</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/users">User Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/category">Category Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/products">Product Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/offer">Offer Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/coupons">Coupon Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/ordermanage">Order Management</a></li>
      </ul>
    </nav>
    
    <div class="container mt-4">
        <h2 class="text-center mb-4">Order Management</h2>
    
        <!-- Filters -->
        <div class="card p-3 shadow-sm mb-4">
            <form method="GET" action="/admin/ordermanage" class="row g-3">
                <div class="col-md-6">
                    <label for="dateFilter" class="form-label fw-bold">Filter by Date:</label>
                    <select name="dateFilter" id="dateFilter" class="form-select" onchange="this.form.submit()">
                        <option value="">All</option>
                        <option value="today">Today</option>
                        <option value="last7days">Last 7 Days</option>
                        <option value="last1month">Last 1 Month</option>
                        <option value="last6months">Last 6 Months</option>
                        <option value="last1year">Last 1 Year</option>
                    </select>
                </div>
    
                <div class="col-md-6">
                    <label for="statusFilter" class="form-label fw-bold">Filter by Status:</label>
                    <select name="statusFilter" id="statusFilter" class="form-select" onchange="this.form.submit()">
                        <option value="">All</option>
                        <option value="Pending">Pending</option>
                        <option value="Shipped">Shipped</option>
                        <option value="Delivered">Delivered</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                </div>
            </form>
        </div>
    
        <!-- Responsive Table -->
        <div class="table-responsive shadow-sm rounded">
            <table class="table table-hover table-bordered text-center align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>Order ID</th>
                        <th>Order Date</th>
                        <th>Customer</th>
                        <th>Status</th>
                        <th>Payment Method</th>
                        <th>Return Requested</th>
                        <th>Return Initiated</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% orders.forEach(order => { %>
                        <tr>
                            <td><%= order.orderNumber %></td>
                            <td><%= new Date(order.orderDate).toLocaleDateString() %></td>
                            <td><%= order.customerName %></td>
                            <td>
                                <% let showAcceptButtons = order.products.some(product => product.return_cancel?.cancelRequested == true && product.return_cancel?.returnRequested == true && product.return_cancel?.returnInitiated == false); %>
                                
                                <select class="form-select status-dropdown" data-order-id="<%= order._id %>" <%= (order.status === "Cancelled" || order.status === "Delivered") ? "disabled" : "" %> >
                                    <option value="Pending" <%= order.status === "Pending" ? "selected" : "" %>>Pending</option>
                                    <option value="Shipped" <%= order.status === "Shipped" ? "selected" : "" %>>Shipped</option>
                                    <option value="Delivered" <%= order.status === "Delivered" ? "selected" : "" %>>Delivered</option>
                                    <option value="Cancelled" <%= order.status === "Cancelled" ? "selected" : "" %>>Cancelled</option>
                                    <% if (showAcceptButtons) { %>
                                        <option value="Return Requested" <%= order.status === "Return Requested" ? "selected" : "" %>>Return Requested</option>
                                    <% } %>
                                </select>
                            </td>
    
                            <td><%= order.paymentDetails.method %></td>
                            <td>
                                <% if (order.products.some(product => product.return_cancel?.returnRequested)) { %>
                                    <span class="badge bg-success">Yes</span>
                                <% } else { %>
                                    <span class="badge bg-danger">No</span>
                                <% } %>
                            </td>
                            <td>
                                <% let showAcceptButton = order.products.some(product => product.return_cancel?.cancelRequested == true && product.return_cancel?.returnRequested == true && product.return_cancel?.returnInitiated == false); %>
                                <% if (showAcceptButton) { %>
                                    <button class="btn btn-sm btn-success acceptReturnBtn" data-order-id="<%= order._id %>">Accept</button>
                                <% } else if (order.products.some(product => product.return_cancel?.returnInitiated == true)) { %>
                                    <span class="badge bg-primary">Accepted</span>
                                <% } %>
                            </td>
    
                            <td>
                                <a href="/admin/ordersdetails/<%= order._id %>" class="btn btn-sm btn-info text-white">View Details</a>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
         <!-- Pagination -->
 <nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <% for (let i = 1; i <= totalPages; i++) { %>
            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                <a class="page-link" href="?page=<%= i %>&dateFilter=<%= dateFilter %>&statusFilter=<%= statusFilter %>"><%= i %></a>
            </li>
        <% } %>
    </ul>
</nav>
    </div>
   

    <!-- Return Details Modal -->
<div class="modal fade" id="returnDetailsModal" tabindex="-1" aria-labelledby="returnDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnDetailsModalLabel">Return Product Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p><strong>Product Name:</strong> <span id="modalProductName"></span></p>
                <p><strong>Size:</strong> <span id="modalProductSize"></span></p>
                <p><strong>Color:</strong> <span id="modalProductColor"></span></p>
                <p><strong>Price:</strong> â‚¹<span id="modalProductPrice"></span></p>
                <p><strong>Quantity:</strong> <span id="modalProductQuantity"></span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.querySelectorAll('.status-dropdown').forEach(select => {
    // If the dropdown is disabled, show SweetAlert on click
    if (select.disabled) {
        select.addEventListener('click', function () {
            Swal.fire({
                icon: 'error',
                title: 'Action Not Allowed',
                text: `This order is already ${this.value}. You cannot change its status.`,
            });
        });
    } else {
        select.addEventListener('change', function () {
            const orderId = this.dataset.orderId;
            const newStatus = this.value;

            // Confirm before updating status
            Swal.fire({
                title: 'Are you sure?',
                text: `You are about to change the order status to ${newStatus}.`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, update it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/orders/${orderId}/status`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ status: newStatus })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Status Updated',
                                text: `Order status changed to ${newStatus}.`,
                            }).then(() => {
                                location.reload(); // Reload page to reflect changes
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Update Failed',
                                text: 'Error updating order status.',
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Server Error',
                            text: 'Something went wrong, please try again later.',
                        });
                    });
                }
            });
        });
    }
});
document.querySelectorAll('.acceptReturnBtn').forEach(button => {
    button.addEventListener('click', function () {
        const orderId = this.getAttribute('data-order-id');

        fetch('/admin/accept-return', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ orderId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Return request accepted successfully.');
                location.reload(); // Reload to reflect changes
            } else {
                alert('Something went wrong. Please try again.');
            }
        })
        .catch(error => console.error('Error:', error));
    });
});


function changePage(step) {
    const url = new URL(window.location.href);
    let page = parseInt(url.searchParams.get("page") || 1);
    page = Math.max(1, page + step);
    url.searchParams.set("page", page);
    window.location.href = url.toString();
}
document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".viewReturnDetails").forEach(button => {
        button.addEventListener("click", function () {
            // Get product details from data attributes
            document.getElementById("modalProductName").innerText = this.getAttribute("data-product-name");
            document.getElementById("modalProductSize").innerText = this.getAttribute("data-product-size");
            document.getElementById("modalProductColor").innerText = this.getAttribute("data-product-color");
            document.getElementById("modalProductPrice").innerText = this.getAttribute("data-product-price");
            document.getElementById("modalProductQuantity").innerText = this.getAttribute("data-product-quantity");
        });
    });
});
document.addEventListener("DOMContentLoaded", function () {
        const urlParams = new URLSearchParams(window.location.search);

        // Retain selected value for date filter
        const dateFilter = urlParams.get("dateFilter");
        if (dateFilter) {
            document.getElementById("dateFilter").value = dateFilter;
        }

        // Retain selected value for status filter
        const statusFilter = urlParams.get("statusFilter");
        if (statusFilter) {
            document.getElementById("statusFilter").value = statusFilter;
        }
    });

        </script>
        