<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - User Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style_admin.css">
</head>
<body>

    <!-- Navbar -->
        <!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="#">Admin Panel</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav ms-auto">
        <li class="nav-item"><a class="nav-link" href="#">Account</a></li>
        <li class="nav-item"><a class="nav-link logout-btn" href="#">Logout</a></li>
      </ul>
    </div>
</nav>

<!-- Sidebar + Main Content -->
<div class="d-flex">
    <nav class="bg-dark text-white p-3" id="sidebar">
      <ul class="nav flex-column">
        <li class="nav-item"><a class="nav-link text-white" href="/admin/dashboard/sales">Dashboard</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/users">User Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/category">Category Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/products">Product Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/offer">Offer Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/coupons">Coupon Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/ordermanage">Order Management</a></li>
      </ul>
    </nav>
        <div class="container mt-4">
            <h2 class="text-center mb-4">Category Management</h2>
        
            <div class="d-flex justify-content-end mb-3">
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal">Add Category</button>
            </div>
        
            <div class="table-responsive">
                <table class="table table-striped table-bordered text-center">
                    <thead class="table-dark">
                        <tr>
                            <th>Category Name</th>
                            <th>Total Stock</th>
                            <th>Total Sales</th>
                            <th>Status</th>
                            <th>Image</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% categories.forEach(category => { %>
                            <tr>
                                <td><%= category.name %></td>
                                <td><%= category.totalStock %></td>
                                <td><%= category.totalSales %></td>
                                <td>
                                    <% if (!category.isDeleted) { %>
                                        <span class="badge bg-success">Active</span>
                                    <% } else { %>
                                        <span class="badge bg-danger">Deleted</span>
                                    <% } %>
                                </td>
                                <td>
                                    <img src="/uploads/<%= category.image %>" width="50" height="50" alt="Category Image">
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-warning" onclick="editCategory('<%= category._id %>', '<%= category.name %>')">Edit</button>
                                    <!-- Toggle Delete/Restore Button -->
                                    <a href="/admin/toggle-category/<%= category._id %>" 
                                        class="btn btn-sm <%= category.isDeleted ? 'btn-success' : 'btn-danger' %> toggleCategory">
                                        <%= category.isDeleted ? 'Restore' : 'Delete' %>
                                     </a>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        

            <!-- Add Category Modal -->
    <div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addCategoryModalLabel">Add Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="addCategoryForm" action="/admin/add-category" method="POST" enctype="multipart/form-data">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Category Name</label>
                            <input type="text" class="form-control" name="name" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Category Image</label>
                            <input type="file" class="form-control" name="image" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Add Category</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
           <!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editCategoryForm" enctype="multipart/form-data">
                <div class="modal-body">
                    <input type="hidden" name="id" id="editCategoryId">
                    <div class="mb-3">
                        <label class="form-label">Category Name</label>
                        <input type="text" class="form-control" name="name" id="editCategoryName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Category Image</label>
                        <input type="file" class="form-control" name="image" id="editCategoryImage">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Update Category</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
function editCategory(id, name) {
    document.getElementById("editCategoryId").value = id;
    document.getElementById("editCategoryName").value = name;
    new bootstrap.Modal(document.getElementById("editCategoryModal")).show();
}
document.addEventListener("DOMContentLoaded", function() {
        document.querySelectorAll(".toggleCategory").forEach(link => {
            link.addEventListener("click", function(event) {
                event.preventDefault(); // Prevent default navigation
                
                let url = this.getAttribute("href"); // Get the link's href
                let isDeleted = this.classList.contains("btn-success"); // If btn-success, it's a Restore action
                
                // Show SweetAlert2 confirmation
                Swal.fire({
                    title: isDeleted ? "Restore Category?" : "Delete Category?",
                    text: isDeleted 
                        ? "Do you want to restore this category?" 
                        : "Are you sure you want to delete this category?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: isDeleted ? "#28a745" : "#dc3545", // Green for Restore, Red for Delete
                    cancelButtonColor: "#6c757d",
                    confirmButtonText: isDeleted ? "Yes, Restore" : "Yes, Delete"
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = url; // Redirect if confirmed
                    }
                });
            });
        });
    });

// Handle form submission via JavaScript Fetch API (PATCH request)
document.getElementById("editCategoryForm").addEventListener("submit", async function(event) {
    event.preventDefault(); // Prevent default form submission

    const id = document.getElementById("editCategoryId").value;
    const formData = new FormData(this);

    try {
    const response = await fetch(`/admin/edit-category/${id}`, {
        method: "PATCH", // Use PATCH for updating
        body: formData
    });

    if (response.ok) {
        Swal.fire({
            title: "Success!",
            text: "Category updated successfully!",
            icon: "success",
            confirmButtonText: "OK"
        }).then(() => {
            window.location.href = "/admin/category"; // Redirect after confirmation
        });
    } else {
        Swal.fire({
            title: "Error!",
            text: "Error updating category",
            icon: "error",
            confirmButtonText: "OK"
        });
    }
} catch (error) {
    console.error(error);
    Swal.fire({
        title: "Server Error!",
        text: "Please try again later.",
        icon: "error",
        confirmButtonText: "OK"
    });
}
});
document.addEventListener("DOMContentLoaded", function () {
        document.querySelector(".logout-btn").addEventListener("click", function (e) {
            e.preventDefault();
            Swal.fire({
                title: "Are you sure?",
                text: "You will be logged out!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, Logout!"
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch("/admin/logout")
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                window.location.href = "/admin/login"; // Redirect to admin login
                            }
                        })
                        .catch(error => console.error("Error:", error));
                }
            });
        });

        // Auto Logout when session expires
        function checkSessionExpiry() {
            fetch("/admin/check-session")
                .then(response => response.json())
                .then(data => {
                    if (data.expired) {
                        Swal.fire({
                            title: "Session Expired",
                            text: "Log in to continue",
                            icon: "info",
                            confirmButtonText: "OK"
                        }).then(() => {
                            window.location.href = "/admin/login";
                        });
                    }
                })
                .catch(error => console.error("Error:", error));
        }

        setInterval(checkSessionExpiry, 60000); // Check session expiry every 1 minute
    });
</script>
        
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/main.js"></script>