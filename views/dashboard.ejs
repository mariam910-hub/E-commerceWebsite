<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - User Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style_admin.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

</head>
<body>

    <!-- Navbar -->
        <!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="#">Admin Panel</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav ms-auto">
        <li class="nav-item"><a class="nav-link" href="#">Account</a></li>
        <li class="nav-item"><a class="nav-link logout-btn" href="#">Logout</a></li>
      </ul>
    </div>
</nav>

<!-- Sidebar + Main Content -->
<div class="d-flex">
    <nav class="bg-dark text-white p-3 vh-100%" id="sidebar ">
      <ul class="nav flex-column">
        <li class="nav-item"><a class="nav-link text-white" href="/admin/dashboard/sales">Dashboard</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/users">User Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/category">Category Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/products">Product Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/offer">Offer Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/coupons">Coupon Management</a></li>
        <li class="nav-item"><a class="nav-link text-white" href="/admin/ordermanage">Order Management</a></li>
      </ul>
    </nav>


    <div class="container mt-4">
        <h2 class="text-center">Sales Dashboard</h2>
        <p>Click here to view 
            <a href="/admin/sales-report" class="btn btn-primary">Sales Report</a>
        </p>
        
        
        <div class="row">
            <div class="col-md-3">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">Total Orders</h5>
                        <h3><%= overallOrderCount %></h3>
                    </div>
                </div>
            </div>
        
            <div class="col-md-3">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">Total Revenue</h5>
                        <h3>₹<%= overallOrderAmount.toFixed(2)-totalCouponDiscount.toFixed(2) %></h3>
                    </div>
                </div>
            </div>
        
            <div class="col-md-3">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">Total Discount</h5>
                        <h3>₹<%= overallDiscount.toFixed(2) %></h3>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">Total Coupon Discount</h5>
                        <h3>₹<%=  totalCouponDiscount.toFixed(2) %></h3>
                    </div>
                </div>
            </div>
            
        </div>
        <!-- Dropdown to Select Time Range -->
        <div class="d-flex justify-content-center mb-3">
            <select id="timeRange" class="form-select w-25">
                <option value="daily">Daily</option>
                <option value="weekly">Weekly</option>
                <option value="monthly">Monthly</option>
            </select>
        </div>
    
        <!-- Total Sales Bar Chart -->
        <div class="card p-3 mb-3">
            <h5>Total Sales</h5>
            <canvas id="salesChart"></canvas>
        </div>
    
        <!-- Fast-Selling Products Line Chart -->
        <div class="row">
            <!-- Fast-Selling Products Chart -->
            <div class="col-md-6">
                <div class="card p-3 mb-3">
                    <h5>Top 5 Fast-Selling Products</h5>
                    <canvas id="productChart"></canvas>
                </div>
            </div>
        
            <!-- Category Sales Pie Chart -->
            <div class="col-md-6">
                <div class="card p-3 mb-3">
                    <h5>Sales by Category</h5>
                    <canvas id="categoryChart"></canvas>
                </div>
            </div>
        </div>
        
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

<script>
    $(document).ready(function () {
        let salesChart, productChart, categoryChart;

        function fetchSalesData(timeRange) {
            $.ajax({
                url: "/admin/dashboard/sales?range=" + timeRange+"&t=" + new Date().getTime(),
                method: "GET",
                dataType: "json",
                success: function (data) {
                    updateCharts(data.salesData, data.fastSellingProducts, data.categoryData);
                },
                error: function () {
                    alert("Error fetching sales data.");
                }
            });
        }

        function updateCharts(salesData, fastSellingProducts, categoryData) {
            const ctxSales = document.getElementById("salesChart").getContext("2d");
            const ctxProducts = document.getElementById("productChart").getContext("2d");
            const ctxCategory = document.getElementById("categoryChart").getContext("2d");

            // Destroy existing charts
            if (salesChart) salesChart.destroy();
            if (productChart) productChart.destroy();
            if (categoryChart) categoryChart.destroy();

            // Extracting sales labels (dates) and data (revenue)
            const salesLabels = salesData.map(s => s.date);
            const salesValues = salesData.map(s => s.totalRevenue);

            // Create Total Sales Bar Chart
            salesChart = new Chart(ctxSales, {
                type: "bar",
                data: {
                    labels: salesLabels,
                    datasets: [
                        {
                            label: "Total Sales (₹)",
                            data: salesValues,
                            backgroundColor: "rgba(54, 162, 235, 0.5)",
                            borderColor: "rgba(54, 162, 235, 1)",
                            borderWidth: 1,
                        },
                    ],
                },
                options: { responsive: true },
            });

            // Fast-Selling Products Line Chart
            productChart = new Chart(ctxProducts, {
                type: "line",
                data: {
                    labels: fastSellingProducts.map(p => p.productName),
                    datasets: [{
                        label: "Quantity Sold",
                        data: fastSellingProducts.map(p => p.quantity),
                        borderColor: "rgba(255, 99, 132, 1)",
                        fill: false,
                        tension: 0.4
                    }]
                },
                options: { responsive: true }
            });

            // Category Sales Pie Chart
            categoryChart = new Chart(ctxCategory, {
                type: "pie",
                data: {
                    labels: categoryData.map(c => c.categoryName),
                    datasets: [{
                        data: categoryData.map(c => c.totalRevenue),
                        backgroundColor: ["#FF6384", "#36A2EB", "#FFCE56", "#4CAF50", "#8E44AD", "red"],
                    }]
                },
                options: { responsive: true }
            });
        }

        // Initial chart load with default data
        fetchSalesData("daily");

        // Change event listener for the dropdown
        $("#timeRange").on("change", function () {
            const selectedRange = $(this).val();
            fetchSalesData(selectedRange);
        });
    });

    document.getElementById("downloadPDF").addEventListener("click", function () {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF("p", "mm", "a4");

    setTimeout(() => {
        html2canvas(document.querySelector(".container")).then(canvas => {
            const imgData = canvas.toDataURL("image/png");
            const imgWidth = 190; 
            const imgHeight = (canvas.height * imgWidth) / canvas.width;
            doc.addImage(imgData, "PNG", 10, 10, imgWidth, imgHeight);
            doc.save("Sales_Dashboard.pdf");
        });
    }, 1000); // Delay to ensure all charts load
});


document.getElementById("downloadExcel").addEventListener("click", function () {
    let wb = XLSX.utils.book_new();

    // Export Table Data
    let tableData = [
        ["Metric", "Value"],
        ["Total Orders", "<%= overallOrderCount %>"],
        ["Total Revenue", "₹<%= overallOrderAmount.toFixed(2) %>"],
        ["Total Discount", "₹<%= overallDiscount.toFixed(2) %>"],
        ["Total Coupon Discount", "₹<%= totalCouponDiscount.toFixed(2) %>"]
    ];
    let ws = XLSX.utils.aoa_to_sheet(tableData);
    XLSX.utils.book_append_sheet(wb, ws, "Dashboard");

    // Export Sales Data
    let salesData = [
        ["Date", "Total Revenue"],
        ...salesChart.data.labels.map((label, i) => [label, salesChart.data.datasets[0].data[i]])
    ];
    let ws2 = XLSX.utils.aoa_to_sheet(salesData);
    XLSX.utils.book_append_sheet(wb, ws2, "Sales Data");

    // Capture Chart as Image
    html2canvas(document.querySelector("#salesChart")).then(canvas => {
        let imgData = canvas.toDataURL("image/png");

        // Convert image to Excel-compatible format
        let ws3 = XLSX.utils.aoa_to_sheet([["Sales Chart"]]);
        ws3["!merges"] = [{ s: { r: 0, c: 0 }, e: { r: 0, c: 4 } }]; // Merge cells

        // Add image as base64 (Excel doesn't support inline images, workaround needed)
        ws3.A2 = { t: "s", v: "Image: Copy this URL and insert manually in Excel:\n" + imgData };

        XLSX.utils.book_append_sheet(wb, ws3, "Sales Chart");

        // Save File
        XLSX.writeFile(wb, "Sales_Dashboard.xlsx");
    });
});
</script>
